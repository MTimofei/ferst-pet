package main

import (
	"encoding/json"
	"fmt"
	"io/ioutil"
	"log"
	"net/http"
	"time"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

type AutoGenerated struct {
	Status  string `json:"status"`
	Sources []struct {
		ID          string `json:"id"`
		Name        string `json:"name"`
		Description string `json:"description"`
		URL         string `json:"url"`
		Category    string `json:"category"`
		Language    string `json:"language"`
		Country     string `json:"country"`
	} `json:"sources"`
}

func main() {
	//s := tgbotapi.EscapeText(tgbotapi.ModeHTML, "<h1>Z</h1>")
	bot, err := tgbotapi.NewBotAPI("5930583268:AAENtVOI64-FqouTbv6cjAbaT21ACZYsr6o")
	if err != nil {
		log.Panic(err)
	}
	bot.Debug = true
	log.Printf("Authorized on account %s", bot.Self.UserName)
	u := tgbotapi.NewUpdate(0)
	u.Timeout = 60
	updates := bot.GetUpdatesChan(u)

	c := http.Client{}

	for update := range updates {
		go func(tgbotapi.Update) {
			for {
				response, err := c.Get("https://newsapi.org/v2/top-headlines/sources?category=technology&apiKey=253d8ab546384c07bb5537a838bc88cd")
				if err != nil {
					log.Println(err)
				} else {
					log.Println(response.Status)
				}
				body, _ := ioutil.ReadAll(response.Body)
				response.Body.Close()
				readyjson := &AutoGenerated{}
				json.Unmarshal(body, readyjson)
				log.Println(*readyjson)
				for _, i := range readyjson.Sources {
					news := fmt.Sprintf("%s\n%s\n%s", i.Category, i.Description, i.URL)
					msg := tgbotapi.NewMessage(update.Message.Chat.ID, news)
					bot.Send(msg)
				}
				time.Sleep(10 * time.Second)
			}
		}(update)
		// if update.Message != nil {
		// 	msg := tgbotapi.NewMessage(update.Message.Chat.ID, "привет")
		// 	bot.Send(msg)
		// }
	}
}
